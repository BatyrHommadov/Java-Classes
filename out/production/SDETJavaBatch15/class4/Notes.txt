Operators:
    Operators are different symbols that we can use to perform operations like addition, subtraction, division,
    multiplication, etc..., we can compare things if two entities are same or not if a number is greater than the other
    number or not.
    There are three main types of OPERATORS:
    1. Arithmetic
    2. Relational
    3. Logical

Arithmetic operators:
    We use arithmetic operators to perform simple math operations (additions, subtraction, divisions, multiplication,
    % => modulus used to calculate the remainder).

Relational operators:
    Relational operators are used to compare two quantities or entities. For example: if something is bigger than
    the other thing, or if two numbers are same or not, or if two boolean variables contain the same values or not.
    == => used to check if two variables contain the same value or not. If it is the same - we get true, otherwise false.
    != => used to check if two variables don't cotain the same value. We get a true if they are not same, otherwise false.
    > => used to check if one value is greater than the other value or not if greater - we get a true.
    < => it is opposite of > used to check if the value on the left is smaller than the value on right side - we will get a true.
    >= => if the value on the left is greater the value on the right side, or if they are the same - we will get a true.
    <= => it is opposite of >= and it is used to check if something is less than or equal to another thing.

Conditional constructs.
    I used to write a conditional code - a piece of code that executes based on a condition. If condition is true,
    then Java executes the code, otherwise it skips the code.
    How to write ifElse condition:
    if(condition){
    any line of code, or even another if condition

    if(){

    }
    }

 Important Notes:
 1. For String we use equals method instead of == sign, because it is a non-primitive data type
 2. We can cmd+opt+l (mac) to format our code.
 3. If we are confused about brackets on opening or closing part to check


If Else conditions:
If I have to test the same variable for multiple conditions, I should use IfElseIf;
If I have multiple conditions and these conditions are dependent on each other - NestedIf conditions should be used;